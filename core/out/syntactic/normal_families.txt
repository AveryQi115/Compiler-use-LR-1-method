项目集规范族：
规范族 0 : 
Start->・ Program 
Program->・ Stmt_string 
Stmt_string->・ Stmt_loop Stmt 
Stmt_loop->・ Stmt_loop Stmt 
Stmt_loop->・

规范族 1 : 
Start->Program ・

规范族 2 : 
Program->Stmt_string ・

规范族 3 : 
Stmt_string->Stmt_loop ・ Stmt 
Stmt_loop->Stmt_loop ・ Stmt 
Stmt->・ int identifier Stmt_type 
Stmt->・ void identifier Create_Function_table Function_stmt 

规范族 4 : 
Stmt_string->Stmt_loop Stmt ・
Stmt_loop->Stmt_loop Stmt ・

规范族 5 : 
Stmt->int ・ identifier Stmt_type 

规范族 6 : 
Stmt->void ・ identifier Create_Function_table Function_stmt 

规范族 7 : 
Stmt->void identifier ・ Create_Function_table Function_stmt 
Create_Function_table->・

规范族 8 : 
Stmt->void identifier Create_Function_table ・ Function_stmt 
Function_stmt->・ ( Formal_parameter ) Sentence_block Exit_Function_table 

规范族 9 : 
Stmt->void identifier Create_Function_table Function_stmt ・

规范族 10 : 
Function_stmt->( ・ Formal_parameter ) Sentence_block Exit_Function_table 
Formal_parameter->・ Formal_parameter_list 
Formal_parameter->・ void 
Formal_parameter->・
Formal_parameter_list->・ Parameter_loop Parameter 
Parameter_loop->・ Parameter_loop Parameter , 
Parameter_loop->・

规范族 11 : 
Function_stmt->( Formal_parameter ・ ) Sentence_block Exit_Function_table 

规范族 12 : 
Formal_parameter->Formal_parameter_list ・

规范族 13 : 
Formal_parameter->void ・

规范族 14 : 
Formal_parameter_list->Parameter_loop ・ Parameter 
Parameter_loop->Parameter_loop ・ Parameter , 
Parameter->・ int identifier 

规范族 15 : 
Formal_parameter_list->Parameter_loop Parameter ・
Parameter_loop->Parameter_loop Parameter ・ , 

规范族 16 : 
Parameter->int ・ identifier 

规范族 17 : 
Parameter->int identifier ・

规范族 18 : 
Parameter_loop->Parameter_loop Parameter , ・

规范族 19 : 
Function_stmt->( Formal_parameter ) ・ Sentence_block Exit_Function_table 
Sentence_block->・ Sentence_block_m { Internal_stmt Sentence_string } 
Sentence_block_m->・

规范族 20 : 
Function_stmt->( Formal_parameter ) Sentence_block ・ Exit_Function_table 
Exit_Function_table->・

规范族 21 : 
Sentence_block->Sentence_block_m ・ { Internal_stmt Sentence_string } 

规范族 22 : 
Sentence_block->Sentence_block_m { ・ Internal_stmt Sentence_string } 
Internal_stmt->・
Internal_stmt->・ Internal_variable_stmt ; Internal_stmt 
Internal_variable_stmt->・ int identifier 

规范族 23 : 
Sentence_block->Sentence_block_m { Internal_stmt ・ Sentence_string } 
Sentence_string->・ Sentence_loop Sentence 
Sentence_loop->・ Sentence_loop Sentence 
Sentence_loop->・

规范族 24 : 
Internal_stmt->Internal_variable_stmt ・ ; Internal_stmt 

规范族 25 : 
Internal_variable_stmt->int ・ identifier 

规范族 26 : 
Internal_variable_stmt->int identifier ・

规范族 27 : 
Internal_stmt->・
Internal_stmt->・ Internal_variable_stmt ; Internal_stmt 
Internal_stmt->Internal_variable_stmt ; ・ Internal_stmt 
Internal_variable_stmt->・ int identifier 

规范族 28 : 
Internal_stmt->Internal_variable_stmt ; Internal_stmt ・

规范族 29 : 
Sentence_block->Sentence_block_m { Internal_stmt Sentence_string ・ } 

规范族 30 : 
Sentence_string->Sentence_loop ・ Sentence 
Sentence_loop->Sentence_loop ・ Sentence 
Sentence->・ If_sentence 
Sentence->・ While_sentence 
Sentence->・ Return_sentence 
Sentence->・ Assign_sentence 
Assign_sentence->・ identifier = Expression ; 
Return_sentence->・ return Return_expression ; 
While_sentence->・ while While_sentence_m1 ( Expression ) While_sentence_m2 Sentence_block 
If_sentence->・ if If_sentence_m0 ( Expression ) If_sentence_m1 Sentence_block If_expression 

规范族 31 : 
Sentence_string->Sentence_loop Sentence ・
Sentence_loop->Sentence_loop Sentence ・

规范族 32 : 
Sentence->If_sentence ・

规范族 33 : 
Sentence->While_sentence ・

规范族 34 : 
Sentence->Return_sentence ・

规范族 35 : 
Sentence->Assign_sentence ・

规范族 36 : 
Assign_sentence->identifier ・ = Expression ; 

规范族 37 : 
Return_sentence->return ・ Return_expression ; 
Return_expression->・
Return_expression->・ Expression 
Expression->・ Add_expression_loop Add_expression 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop 

规范族 38 : 
While_sentence->while ・ While_sentence_m1 ( Expression ) While_sentence_m2 Sentence_block 
While_sentence_m1->・

规范族 39 : 
If_sentence->if ・ If_sentence_m0 ( Expression ) If_sentence_m1 Sentence_block If_expression 
If_sentence_m0->・

规范族 40 : 
If_sentence->if If_sentence_m0 ・ ( Expression ) If_sentence_m1 Sentence_block If_expression 

规范族 41 : 
If_sentence->if If_sentence_m0 ( ・ Expression ) If_sentence_m1 Sentence_block If_expression 
Expression->・ Add_expression_loop Add_expression 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop 

规范族 42 : 
If_sentence->if If_sentence_m0 ( Expression ・ ) If_sentence_m1 Sentence_block If_expression 

规范族 43 : 
Expression->Add_expression_loop ・ Add_expression 
Add_expression_loop->Add_expression_loop ・ Add_expression Relop 
Add_expression->・ Item_loop Item 
Item_loop->・
Item_loop->・ Item_loop Item + 
Item_loop->・ Item_loop Item - 

规范族 44 : 
Expression->Add_expression_loop Add_expression ・
Add_expression_loop->Add_expression_loop Add_expression ・ Relop 
Relop->・ < 
Relop->・ <= 
Relop->・ > 
Relop->・ >= 
Relop->・ == 
Relop->・ != 

规范族 45 : 
Add_expression->Item_loop ・ Item 
Item_loop->Item_loop ・ Item + 
Item_loop->Item_loop ・ Item - 
Item->・ Factor_loop Factor 
Factor_loop->・
Factor_loop->・ Factor_loop Factor * 
Factor_loop->・ Factor_loop Factor / 

规范族 46 : 
Add_expression->Item_loop Item ・
Item_loop->Item_loop Item ・ + 
Item_loop->Item_loop Item ・ - 

规范族 47 : 
Item->Factor_loop ・ Factor 
Factor_loop->Factor_loop ・ Factor * 
Factor_loop->Factor_loop ・ Factor / 
Factor->・ Const_value 
Factor->・ ( Expression ) 
Factor->・ identifier FTYPE 
Const_value->・ num 

规范族 48 : 
Item->Factor_loop Factor ・
Factor_loop->Factor_loop Factor ・ * 
Factor_loop->Factor_loop Factor ・ / 

规范族 49 : 
Factor->Const_value ・

规范族 50 : 
Expression->・ Add_expression_loop Add_expression 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop 
Factor->( ・ Expression ) 

规范族 51 : 
Factor->identifier ・ FTYPE 
FTYPE->・ Call_func 
FTYPE->・
Call_func->・ ( Call_func_check Actual_parameter_list ) 

规范族 52 : 
Const_value->num ・

规范族 53 : 
Factor->identifier FTYPE ・

规范族 54 : 
FTYPE->Call_func ・

规范族 55 : 
Call_func->( ・ Call_func_check Actual_parameter_list ) 
Call_func_check->・

规范族 56 : 
Call_func->( Call_func_check ・ Actual_parameter_list ) 
Actual_parameter_list->・
Actual_parameter_list->・ Expression_loop Expression 
Expression_loop->・
Expression_loop->・ Expression_loop Expression , 

规范族 57 : 
Call_func->( Call_func_check Actual_parameter_list ・ ) 

规范族 58 : 
Expression->・ Add_expression_loop Add_expression 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop 
Actual_parameter_list->Expression_loop ・ Expression 
Expression_loop->Expression_loop ・ Expression , 

规范族 59 : 
Actual_parameter_list->Expression_loop Expression ・
Expression_loop->Expression_loop Expression ・ , 

规范族 60 : 
Expression_loop->Expression_loop Expression , ・

规范族 61 : 
Call_func->( Call_func_check Actual_parameter_list ) ・

规范族 62 : 
Factor->( Expression ・ ) 

规范族 63 : 
Factor->( Expression ) ・

规范族 64 : 
Factor_loop->Factor_loop Factor * ・

规范族 65 : 
Factor_loop->Factor_loop Factor / ・

规范族 66 : 
Item_loop->Item_loop Item + ・

规范族 67 : 
Item_loop->Item_loop Item - ・

规范族 68 : 
Add_expression_loop->Add_expression_loop Add_expression Relop ・

规范族 69 : 
Relop->< ・

规范族 70 : 
Relop-><= ・

规范族 71 : 
Relop->> ・

规范族 72 : 
Relop->>= ・

规范族 73 : 
Relop->== ・

规范族 74 : 
Relop->!= ・

规范族 75 : 
If_sentence->if If_sentence_m0 ( Expression ) ・ If_sentence_m1 Sentence_block If_expression 
If_sentence_m1->・

规范族 76 : 
Sentence_block->・ Sentence_block_m { Internal_stmt Sentence_string } 
Sentence_block_m->・
If_sentence->if If_sentence_m0 ( Expression ) If_sentence_m1 ・ Sentence_block If_expression 

规范族 77 : 
If_sentence->if If_sentence_m0 ( Expression ) If_sentence_m1 Sentence_block ・ If_expression 
If_expression->・
If_expression->・ If_sentence_n else Sentence_block 
If_sentence_n->・

规范族 78 : 
If_sentence->if If_sentence_m0 ( Expression ) If_sentence_m1 Sentence_block If_expression ・

规范族 79 : 
If_expression->If_sentence_n ・ else Sentence_block 

规范族 80 : 
Sentence_block->・ Sentence_block_m { Internal_stmt Sentence_string } 
Sentence_block_m->・
If_expression->If_sentence_n else ・ Sentence_block 

规范族 81 : 
If_expression->If_sentence_n else Sentence_block ・

规范族 82 : 
While_sentence->while While_sentence_m1 ・ ( Expression ) While_sentence_m2 Sentence_block 

规范族 83 : 
While_sentence->while While_sentence_m1 ( ・ Expression ) While_sentence_m2 Sentence_block 
Expression->・ Add_expression_loop Add_expression 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop 

规范族 84 : 
While_sentence->while While_sentence_m1 ( Expression ・ ) While_sentence_m2 Sentence_block 

规范族 85 : 
While_sentence->while While_sentence_m1 ( Expression ) ・ While_sentence_m2 Sentence_block 
While_sentence_m2->・

规范族 86 : 
Sentence_block->・ Sentence_block_m { Internal_stmt Sentence_string } 
Sentence_block_m->・
While_sentence->while While_sentence_m1 ( Expression ) While_sentence_m2 ・ Sentence_block 

规范族 87 : 
While_sentence->while While_sentence_m1 ( Expression ) While_sentence_m2 Sentence_block ・

规范族 88 : 
Return_sentence->return Return_expression ・ ; 

规范族 89 : 
Return_expression->Expression ・

规范族 90 : 
Return_sentence->return Return_expression ; ・

规范族 91 : 
Assign_sentence->identifier = ・ Expression ; 
Expression->・ Add_expression_loop Add_expression 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop 

规范族 92 : 
Assign_sentence->identifier = Expression ・ ; 

规范族 93 : 
Assign_sentence->identifier = Expression ; ・

规范族 94 : 
Sentence_block->Sentence_block_m { Internal_stmt Sentence_string } ・

规范族 95 : 
Function_stmt->( Formal_parameter ) Sentence_block Exit_Function_table ・

规范族 96 : 
Stmt->int identifier ・ Stmt_type 
Stmt_type->・ Variavle_stmt 
Stmt_type->・ Create_Function_table Function_stmt 
Create_Function_table->・
Variavle_stmt->・ ; 

规范族 97 : 
Stmt->int identifier Stmt_type ・

规范族 98 : 
Stmt_type->Variavle_stmt ・

规范族 99 : 
Stmt_type->Create_Function_table ・ Function_stmt 
Function_stmt->・ ( Formal_parameter ) Sentence_block Exit_Function_table 

规范族 100 : 
Variavle_stmt->; ・

规范族 101 : 
Stmt_type->Create_Function_table Function_stmt ・

