项目集规范族：
规范族 0 : 
Start->・ Program  #|
Program->・ Stmt_string  #|
Stmt_loop->・ Stmt_loop Stmt  int|void|
Stmt_loop->・
Stmt_string->・ Stmt_loop Stmt  #|

规范族 1 : 
Start->Program ・ #|

规范族 2 : 
Program->Stmt_string ・ #|

规范族 3 : 
Stmt_string->Stmt_loop ・ Stmt  #|
Stmt->・ int identifier Stmt_type  #|int|void|
Stmt_loop->Stmt_loop ・ Stmt  int|void|
Stmt->・ void identifier Create_Function_table Function_stmt  #|int|void|

规范族 4 : 
Stmt_string->Stmt_loop Stmt ・ #|
Stmt_loop->Stmt_loop Stmt ・ int|void|

规范族 5 : 
Stmt->int ・ identifier Stmt_type  #|int|void|

规范族 6 : 
Stmt->void ・ identifier Create_Function_table Function_stmt  #|int|void|

规范族 7 : 
Stmt->void identifier ・ Create_Function_table Function_stmt  #|int|void|
Create_Function_table->・

规范族 8 : 
Stmt->void identifier Create_Function_table ・ Function_stmt  #|int|void|
Function_stmt->・ ( Formal_parameter ) Sentence_block Exit_Function_table  #|int|void|

规范族 9 : 
Stmt->void identifier Create_Function_table Function_stmt ・ #|int|void|

规范族 10 : 
Formal_parameter->・
Formal_parameter->・ void  )|
Parameter_loop->・ Parameter_loop Parameter ,  int|
Formal_parameter_list->・ Parameter_loop Parameter  )|
Function_stmt->( ・ Formal_parameter ) Sentence_block Exit_Function_table  #|int|void|
Formal_parameter->・ Formal_parameter_list  )|
Parameter_loop->・

规范族 11 : 
Formal_parameter->void ・ )|

规范族 12 : 
Formal_parameter_list->Parameter_loop ・ Parameter  )|
Parameter_loop->Parameter_loop ・ Parameter ,  int|
Parameter->・ int identifier  )|,|

规范族 13 : 
Function_stmt->( Formal_parameter ・ ) Sentence_block Exit_Function_table  #|int|void|

规范族 14 : 
Formal_parameter->Formal_parameter_list ・ )|

规范族 15 : 
Function_stmt->( Formal_parameter ) ・ Sentence_block Exit_Function_table  #|int|void|
Sentence_block_m->・
Sentence_block->・ Sentence_block_m { Internal_stmt Sentence_string }  #|$|int|void|

规范族 16 : 
Function_stmt->( Formal_parameter ) Sentence_block ・ Exit_Function_table  #|int|void|
Exit_Function_table->・

规范族 17 : 
Sentence_block->Sentence_block_m ・ { Internal_stmt Sentence_string }  #|$|int|void|

规范族 18 : 
Internal_variable_stmt->・ int identifier  ;|
Sentence_block->Sentence_block_m { ・ Internal_stmt Sentence_string }  #|$|int|void|
Internal_stmt->・
Internal_stmt->・ Internal_variable_stmt ; Internal_stmt  identifier|if|return|while|

规范族 19 : 
Internal_variable_stmt->int ・ identifier  ;|

规范族 20 : 
Sentence_string->・ Sentence_loop Sentence  }|
Sentence_loop->・ Sentence_loop Sentence  identifier|if|return|while|
Sentence_block->Sentence_block_m { Internal_stmt ・ Sentence_string }  #|$|int|void|
Sentence_loop->・

规范族 21 : 
Internal_stmt->Internal_variable_stmt ・ ; Internal_stmt  identifier|if|return|while|

规范族 22 : 
Internal_variable_stmt->・ int identifier  ;|
Internal_stmt->・
Internal_stmt->・ Internal_variable_stmt ; Internal_stmt  identifier|if|return|while|
Internal_stmt->Internal_variable_stmt ; ・ Internal_stmt  identifier|if|return|while|

规范族 23 : 
Internal_stmt->Internal_variable_stmt ; Internal_stmt ・ identifier|if|return|while|

规范族 24 : 
Sentence_string->Sentence_loop ・ Sentence  }|
Assign_sentence->・ identifier = Expression ;  identifier|if|return|while|}|
Return_sentence->・ return Return_expression ;  identifier|if|return|while|}|
Sentence->・ Assign_sentence  identifier|if|return|while|}|
Sentence->・ Return_sentence  identifier|if|return|while|}|
Sentence->・ If_sentence  identifier|if|return|while|}|
Sentence_loop->Sentence_loop ・ Sentence  identifier|if|return|while|
While_sentence->・ while While_sentence_m1 ( Expression ) While_sentence_m2 Sentence_block  identifier|if|return|while|}|
Sentence->・ While_sentence  identifier|if|return|while|}|
If_sentence->・ if If_sentence_m0 ( Expression ) If_sentence_m1 Sentence_block If_expression  identifier|if|return|while|}|

规范族 25 : 
Sentence_block->Sentence_block_m { Internal_stmt Sentence_string ・ }  #|$|int|void|

规范族 26 : 
Sentence_block->Sentence_block_m { Internal_stmt Sentence_string } ・ #|$|int|void|

规范族 27 : 
Sentence_string->Sentence_loop Sentence ・ }|
Sentence_loop->Sentence_loop Sentence ・ identifier|if|return|while|

规范族 28 : 
Assign_sentence->identifier ・ = Expression ;  identifier|if|return|while|}|

规范族 29 : 
Return_expression->・ Expression  ;|
Return_expression->・
Return_sentence->return ・ Return_expression ;  identifier|if|return|while|}|
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop  (|identifier|num|
Expression->・ Add_expression_loop Add_expression  ;|

规范族 30 : 
Sentence->Assign_sentence ・ identifier|if|return|while|}|

规范族 31 : 
Sentence->Return_sentence ・ identifier|if|return|while|}|

规范族 32 : 
Sentence->If_sentence ・ identifier|if|return|while|}|

规范族 33 : 
While_sentence_m1->・
While_sentence->while ・ While_sentence_m1 ( Expression ) While_sentence_m2 Sentence_block  identifier|if|return|while|}|

规范族 34 : 
Sentence->While_sentence ・ identifier|if|return|while|}|

规范族 35 : 
If_sentence->if ・ If_sentence_m0 ( Expression ) If_sentence_m1 Sentence_block If_expression  identifier|if|return|while|}|
If_sentence_m0->・

规范族 36 : 
If_sentence->if If_sentence_m0 ・ ( Expression ) If_sentence_m1 Sentence_block If_expression  identifier|if|return|while|}|

规范族 37 : 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop  (|identifier|num|
If_sentence->if If_sentence_m0 ( ・ Expression ) If_sentence_m1 Sentence_block If_expression  identifier|if|return|while|}|
Expression->・ Add_expression_loop Add_expression  )|

规范族 38 : 
Expression->Add_expression_loop ・ Add_expression  )|
Add_expression_loop->Add_expression_loop ・ Add_expression Relop  (|identifier|num|
Add_expression->・ Item_loop Item  !=|)|<|<=|==|>|>=|
Item_loop->・ Item_loop Item +  (|identifier|num|
Item_loop->・
Item_loop->・ Item_loop Item -  (|identifier|num|

规范族 39 : 
If_sentence->if If_sentence_m0 ( Expression ・ ) If_sentence_m1 Sentence_block If_expression  identifier|if|return|while|}|

规范族 40 : 
If_sentence->if If_sentence_m0 ( Expression ) ・ If_sentence_m1 Sentence_block If_expression  identifier|if|return|while|}|
If_sentence_m1->・

规范族 41 : 
Sentence_block_m->・
Sentence_block->・ Sentence_block_m { Internal_stmt Sentence_string }  $|else|identifier|if|return|while|}|
If_sentence->if If_sentence_m0 ( Expression ) If_sentence_m1 ・ Sentence_block If_expression  identifier|if|return|while|}|

规范族 42 : 
Sentence_block->Sentence_block_m ・ { Internal_stmt Sentence_string }  $|else|identifier|if|return|while|}|

规范族 43 : 
If_expression->・ If_sentence_n else Sentence_block  identifier|if|return|while|}|
If_sentence_n->・
If_sentence->if If_sentence_m0 ( Expression ) If_sentence_m1 Sentence_block ・ If_expression  identifier|if|return|while|}|
If_expression->・

规范族 44 : 
If_expression->If_sentence_n ・ else Sentence_block  identifier|if|return|while|}|

规范族 45 : 
If_sentence->if If_sentence_m0 ( Expression ) If_sentence_m1 Sentence_block If_expression ・ identifier|if|return|while|}|

规范族 46 : 
Sentence_block_m->・
Sentence_block->・ Sentence_block_m { Internal_stmt Sentence_string }  identifier|if|return|while|}|
If_expression->If_sentence_n else ・ Sentence_block  identifier|if|return|while|}|

规范族 47 : 
If_expression->If_sentence_n else Sentence_block ・ identifier|if|return|while|}|

规范族 48 : 
Internal_variable_stmt->・ int identifier  ;|
Sentence_block->Sentence_block_m { ・ Internal_stmt Sentence_string }  $|else|identifier|if|return|while|}|
Internal_stmt->・
Internal_stmt->・ Internal_variable_stmt ; Internal_stmt  identifier|if|return|while|

规范族 49 : 
Sentence_string->・ Sentence_loop Sentence  }|
Sentence_loop->・ Sentence_loop Sentence  identifier|if|return|while|
Sentence_block->Sentence_block_m { Internal_stmt ・ Sentence_string }  $|else|identifier|if|return|while|}|
Sentence_loop->・

规范族 50 : 
Sentence_block->Sentence_block_m { Internal_stmt Sentence_string ・ }  $|else|identifier|if|return|while|}|

规范族 51 : 
Sentence_block->Sentence_block_m { Internal_stmt Sentence_string } ・ $|else|identifier|if|return|while|}|

规范族 52 : 
Expression->Add_expression_loop Add_expression ・ )|
Relop->・ !=  (|identifier|num|
Relop->・ >  (|identifier|num|
Relop->・ <  (|identifier|num|
Relop->・ <=  (|identifier|num|
Add_expression_loop->Add_expression_loop Add_expression ・ Relop  (|identifier|num|
Relop->・ ==  (|identifier|num|
Relop->・ >=  (|identifier|num|

规范族 53 : 
Factor_loop->・ Factor_loop Factor *  (|identifier|num|
Factor_loop->・
Item->・ Factor_loop Factor  !=|)|+|-|<|<=|==|>|>=|
Add_expression->Item_loop ・ Item  !=|)|<|<=|==|>|>=|
Item_loop->Item_loop ・ Item +  (|identifier|num|
Item_loop->Item_loop ・ Item -  (|identifier|num|
Factor_loop->・ Factor_loop Factor /  (|identifier|num|

规范族 54 : 
Item->Factor_loop ・ Factor  !=|)|+|-|<|<=|==|>|>=|
Factor_loop->Factor_loop ・ Factor *  (|identifier|num|
Factor->・ identifier FTYPE  !=|)|*|+|-|/|<|<=|==|>|>=|
Factor_loop->Factor_loop ・ Factor /  (|identifier|num|
Factor->・ ( Expression )  !=|)|*|+|-|/|<|<=|==|>|>=|
Factor->・ Const_value  !=|)|*|+|-|/|<|<=|==|>|>=|
Const_value->・ num  !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 55 : 
Item_loop->Item_loop Item ・ -  (|identifier|num|
Add_expression->Item_loop Item ・ !=|)|<|<=|==|>|>=|
Item_loop->Item_loop Item ・ +  (|identifier|num|

规范族 56 : 
Item_loop->Item_loop Item - ・ (|identifier|num|

规范族 57 : 
Item_loop->Item_loop Item + ・ (|identifier|num|

规范族 58 : 
Item->Factor_loop Factor ・ !=|)|+|-|<|<=|==|>|>=|
Factor_loop->Factor_loop Factor ・ *  (|identifier|num|
Factor_loop->Factor_loop Factor ・ /  (|identifier|num|

规范族 59 : 
Factor->identifier ・ FTYPE  !=|)|*|+|-|/|<|<=|==|>|>=|
FTYPE->・
Call_func->・ ( Call_func_check Actual_parameter_list )  !=|)|*|+|-|/|<|<=|==|>|>=|
FTYPE->・ Call_func  !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 60 : 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop  (|identifier|num|
Expression->・ Add_expression_loop Add_expression  )|
Factor->( ・ Expression )  !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 61 : 
Factor->Const_value ・ !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 62 : 
Const_value->num ・ !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 63 : 
Factor->( Expression ・ )  !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 64 : 
Factor->( Expression ) ・ !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 65 : 
Factor->identifier FTYPE ・ !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 66 : 
Call_func_check->・
Call_func->( ・ Call_func_check Actual_parameter_list )  !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 67 : 
FTYPE->Call_func ・ !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 68 : 
Call_func->( Call_func_check ・ Actual_parameter_list )  !=|)|*|+|-|/|<|<=|==|>|>=|
Actual_parameter_list->・ Expression_loop Expression  )|
Expression_loop->・ Expression_loop Expression ,  (|identifier|num|
Actual_parameter_list->・
Expression_loop->・

规范族 69 : 
Call_func->( Call_func_check Actual_parameter_list ・ )  !=|)|*|+|-|/|<|<=|==|>|>=|

规范族 70 : 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop  (|identifier|num|
Expression->・ Add_expression_loop Add_expression  )|,|
Actual_parameter_list->Expression_loop ・ Expression  )|
Expression_loop->Expression_loop ・ Expression ,  (|identifier|num|

规范族 71 : 
Expression->Add_expression_loop ・ Add_expression  )|,|
Add_expression_loop->Add_expression_loop ・ Add_expression Relop  (|identifier|num|
Add_expression->・ Item_loop Item  !=|)|,|<|<=|==|>|>=|
Item_loop->・ Item_loop Item +  (|identifier|num|
Item_loop->・
Item_loop->・ Item_loop Item -  (|identifier|num|

规范族 72 : 
Expression_loop->Expression_loop Expression ・ ,  (|identifier|num|
Actual_parameter_list->Expression_loop Expression ・ )|

规范族 73 : 
Expression_loop->Expression_loop Expression , ・ (|identifier|num|

规范族 74 : 
Expression->Add_expression_loop Add_expression ・ )|,|
Relop->・ !=  (|identifier|num|
Relop->・ >  (|identifier|num|
Relop->・ <  (|identifier|num|
Relop->・ <=  (|identifier|num|
Add_expression_loop->Add_expression_loop Add_expression ・ Relop  (|identifier|num|
Relop->・ ==  (|identifier|num|
Relop->・ >=  (|identifier|num|

规范族 75 : 
Factor_loop->・ Factor_loop Factor *  (|identifier|num|
Factor_loop->・
Item->・ Factor_loop Factor  !=|)|+|,|-|<|<=|==|>|>=|
Add_expression->Item_loop ・ Item  !=|)|,|<|<=|==|>|>=|
Item_loop->Item_loop ・ Item +  (|identifier|num|
Item_loop->Item_loop ・ Item -  (|identifier|num|
Factor_loop->・ Factor_loop Factor /  (|identifier|num|

规范族 76 : 
Item->Factor_loop ・ Factor  !=|)|+|,|-|<|<=|==|>|>=|
Factor_loop->Factor_loop ・ Factor *  (|identifier|num|
Factor->・ identifier FTYPE  !=|)|*|+|,|-|/|<|<=|==|>|>=|
Factor_loop->Factor_loop ・ Factor /  (|identifier|num|
Factor->・ ( Expression )  !=|)|*|+|,|-|/|<|<=|==|>|>=|
Factor->・ Const_value  !=|)|*|+|,|-|/|<|<=|==|>|>=|
Const_value->・ num  !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 77 : 
Item_loop->Item_loop Item ・ -  (|identifier|num|
Add_expression->Item_loop Item ・ !=|)|,|<|<=|==|>|>=|
Item_loop->Item_loop Item ・ +  (|identifier|num|

规范族 78 : 
Item->Factor_loop Factor ・ !=|)|+|,|-|<|<=|==|>|>=|
Factor_loop->Factor_loop Factor ・ *  (|identifier|num|
Factor_loop->Factor_loop Factor ・ /  (|identifier|num|

规范族 79 : 
Factor->identifier ・ FTYPE  !=|)|*|+|,|-|/|<|<=|==|>|>=|
FTYPE->・
Call_func->・ ( Call_func_check Actual_parameter_list )  !=|)|*|+|,|-|/|<|<=|==|>|>=|
FTYPE->・ Call_func  !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 80 : 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop  (|identifier|num|
Expression->・ Add_expression_loop Add_expression  )|
Factor->( ・ Expression )  !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 81 : 
Factor->Const_value ・ !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 82 : 
Const_value->num ・ !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 83 : 
Factor->( Expression ・ )  !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 84 : 
Factor->( Expression ) ・ !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 85 : 
Factor->identifier FTYPE ・ !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 86 : 
Call_func_check->・
Call_func->( ・ Call_func_check Actual_parameter_list )  !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 87 : 
FTYPE->Call_func ・ !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 88 : 
Call_func->( Call_func_check ・ Actual_parameter_list )  !=|)|*|+|,|-|/|<|<=|==|>|>=|
Actual_parameter_list->・ Expression_loop Expression  )|
Expression_loop->・ Expression_loop Expression ,  (|identifier|num|
Actual_parameter_list->・
Expression_loop->・

规范族 89 : 
Call_func->( Call_func_check Actual_parameter_list ・ )  !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 90 : 
Call_func->( Call_func_check Actual_parameter_list ) ・ !=|)|*|+|,|-|/|<|<=|==|>|>=|

规范族 91 : 
Factor_loop->Factor_loop Factor * ・ (|identifier|num|

规范族 92 : 
Factor_loop->Factor_loop Factor / ・ (|identifier|num|

规范族 93 : 
Relop->!= ・ (|identifier|num|

规范族 94 : 
Relop->> ・ (|identifier|num|

规范族 95 : 
Relop->< ・ (|identifier|num|

规范族 96 : 
Relop-><= ・ (|identifier|num|

规范族 97 : 
Add_expression_loop->Add_expression_loop Add_expression Relop ・ (|identifier|num|

规范族 98 : 
Relop->== ・ (|identifier|num|

规范族 99 : 
Relop->>= ・ (|identifier|num|

规范族 100 : 
While_sentence->while While_sentence_m1 ・ ( Expression ) While_sentence_m2 Sentence_block  identifier|if|return|while|}|

规范族 101 : 
While_sentence->while While_sentence_m1 ( ・ Expression ) While_sentence_m2 Sentence_block  identifier|if|return|while|}|
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop  (|identifier|num|
Expression->・ Add_expression_loop Add_expression  )|

规范族 102 : 
While_sentence->while While_sentence_m1 ( Expression ・ ) While_sentence_m2 Sentence_block  identifier|if|return|while|}|

规范族 103 : 
While_sentence->while While_sentence_m1 ( Expression ) ・ While_sentence_m2 Sentence_block  identifier|if|return|while|}|
While_sentence_m2->・

规范族 104 : 
Sentence_block_m->・
Sentence_block->・ Sentence_block_m { Internal_stmt Sentence_string }  identifier|if|return|while|}|
While_sentence->while While_sentence_m1 ( Expression ) While_sentence_m2 ・ Sentence_block  identifier|if|return|while|}|

规范族 105 : 
While_sentence->while While_sentence_m1 ( Expression ) While_sentence_m2 Sentence_block ・ identifier|if|return|while|}|

规范族 106 : 
Return_expression->Expression ・ ;|

规范族 107 : 
Return_sentence->return Return_expression ・ ;  identifier|if|return|while|}|

规范族 108 : 
Expression->Add_expression_loop ・ Add_expression  ;|
Add_expression_loop->Add_expression_loop ・ Add_expression Relop  (|identifier|num|
Add_expression->・ Item_loop Item  !=|;|<|<=|==|>|>=|
Item_loop->・ Item_loop Item +  (|identifier|num|
Item_loop->・
Item_loop->・ Item_loop Item -  (|identifier|num|

规范族 109 : 
Expression->Add_expression_loop Add_expression ・ ;|
Relop->・ !=  (|identifier|num|
Relop->・ >  (|identifier|num|
Relop->・ <  (|identifier|num|
Relop->・ <=  (|identifier|num|
Add_expression_loop->Add_expression_loop Add_expression ・ Relop  (|identifier|num|
Relop->・ ==  (|identifier|num|
Relop->・ >=  (|identifier|num|

规范族 110 : 
Factor_loop->・ Factor_loop Factor *  (|identifier|num|
Factor_loop->・
Item->・ Factor_loop Factor  !=|+|-|;|<|<=|==|>|>=|
Add_expression->Item_loop ・ Item  !=|;|<|<=|==|>|>=|
Item_loop->Item_loop ・ Item +  (|identifier|num|
Item_loop->Item_loop ・ Item -  (|identifier|num|
Factor_loop->・ Factor_loop Factor /  (|identifier|num|

规范族 111 : 
Item->Factor_loop ・ Factor  !=|+|-|;|<|<=|==|>|>=|
Factor_loop->Factor_loop ・ Factor *  (|identifier|num|
Factor->・ identifier FTYPE  !=|*|+|-|/|;|<|<=|==|>|>=|
Factor_loop->Factor_loop ・ Factor /  (|identifier|num|
Factor->・ ( Expression )  !=|*|+|-|/|;|<|<=|==|>|>=|
Factor->・ Const_value  !=|*|+|-|/|;|<|<=|==|>|>=|
Const_value->・ num  !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 112 : 
Item_loop->Item_loop Item ・ -  (|identifier|num|
Add_expression->Item_loop Item ・ !=|;|<|<=|==|>|>=|
Item_loop->Item_loop Item ・ +  (|identifier|num|

规范族 113 : 
Item->Factor_loop Factor ・ !=|+|-|;|<|<=|==|>|>=|
Factor_loop->Factor_loop Factor ・ *  (|identifier|num|
Factor_loop->Factor_loop Factor ・ /  (|identifier|num|

规范族 114 : 
Factor->identifier ・ FTYPE  !=|*|+|-|/|;|<|<=|==|>|>=|
FTYPE->・
Call_func->・ ( Call_func_check Actual_parameter_list )  !=|*|+|-|/|;|<|<=|==|>|>=|
FTYPE->・ Call_func  !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 115 : 
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop  (|identifier|num|
Expression->・ Add_expression_loop Add_expression  )|
Factor->( ・ Expression )  !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 116 : 
Factor->Const_value ・ !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 117 : 
Const_value->num ・ !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 118 : 
Factor->( Expression ・ )  !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 119 : 
Factor->( Expression ) ・ !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 120 : 
Factor->identifier FTYPE ・ !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 121 : 
Call_func_check->・
Call_func->( ・ Call_func_check Actual_parameter_list )  !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 122 : 
FTYPE->Call_func ・ !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 123 : 
Call_func->( Call_func_check ・ Actual_parameter_list )  !=|*|+|-|/|;|<|<=|==|>|>=|
Actual_parameter_list->・ Expression_loop Expression  )|
Expression_loop->・ Expression_loop Expression ,  (|identifier|num|
Actual_parameter_list->・
Expression_loop->・

规范族 124 : 
Call_func->( Call_func_check Actual_parameter_list ・ )  !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 125 : 
Call_func->( Call_func_check Actual_parameter_list ) ・ !=|*|+|-|/|;|<|<=|==|>|>=|

规范族 126 : 
Return_sentence->return Return_expression ; ・ identifier|if|return|while|}|

规范族 127 : 
Assign_sentence->identifier = ・ Expression ;  identifier|if|return|while|}|
Add_expression_loop->・
Add_expression_loop->・ Add_expression_loop Add_expression Relop  (|identifier|num|
Expression->・ Add_expression_loop Add_expression  ;|

规范族 128 : 
Assign_sentence->identifier = Expression ・ ;  identifier|if|return|while|}|

规范族 129 : 
Assign_sentence->identifier = Expression ; ・ identifier|if|return|while|}|

规范族 130 : 
Internal_variable_stmt->int identifier ・ ;|

规范族 131 : 
Function_stmt->( Formal_parameter ) Sentence_block Exit_Function_table ・ #|int|void|

规范族 132 : 
Formal_parameter_list->Parameter_loop Parameter ・ )|
Parameter_loop->Parameter_loop Parameter ・ ,  int|

规范族 133 : 
Parameter->int ・ identifier  )|,|

规范族 134 : 
Parameter->int identifier ・ )|,|

规范族 135 : 
Parameter_loop->Parameter_loop Parameter , ・ int|

规范族 136 : 
Stmt->int identifier ・ Stmt_type  #|int|void|
Stmt_type->・ Variavle_stmt  #|int|void|
Variavle_stmt->・ ;  #|int|void|
Stmt_type->・ Create_Function_table Function_stmt  #|int|void|
Create_Function_table->・

规范族 137 : 
Stmt->int identifier Stmt_type ・ #|int|void|

规范族 138 : 
Stmt_type->Variavle_stmt ・ #|int|void|

规范族 139 : 
Variavle_stmt->; ・ #|int|void|

规范族 140 : 
Stmt_type->Create_Function_table ・ Function_stmt  #|int|void|
Function_stmt->・ ( Formal_parameter ) Sentence_block Exit_Function_table  #|int|void|

规范族 141 : 
Stmt_type->Create_Function_table Function_stmt ・ #|int|void|

